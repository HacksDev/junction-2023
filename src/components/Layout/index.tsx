import classNames from "classnames";
import Link from "next/link";
import { useRouter } from "next/router";
import React from "react";
import { PropsWithChildren } from "react";

const navigationElements: Array<{
  route: string;
  icon: React.ReactNode;
}> = [
  {
    route: "/dashboard",
    icon: (
      <svg width="29" height="28" viewBox="0 0 29 28" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M10 16.25V18.5M13 14V18.5M16 11.75V18.5M19 9.5V18.5M8.5 22.25H20.5C21.0967 22.25 21.669 22.0129 22.091 21.591C22.5129 21.169 22.75 20.5967 22.75 20V8C22.75 7.40326 22.5129 6.83097 22.091 6.40901C21.669 5.98705 21.0967 5.75 20.5 5.75H8.5C7.90326 5.75 7.33097 5.98705 6.90901 6.40901C6.48705 6.83097 6.25 7.40326 6.25 8V20C6.25 20.5967 6.48705 21.169 6.90901 21.591C7.33097 22.0129 7.90326 22.25 8.5 22.25Z"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    ),
  },
  {
    route: "/messages",
    icon: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className="w-6 h-6"
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M8.625 9.75a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H8.25m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H12m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0h-.375m-13.5 3.01c0 1.6 1.123 2.994 2.707 3.227 1.087.16 2.185.283 3.293.369V21l4.184-4.183a1.14 1.14 0 01.778-.332 48.294 48.294 0 005.83-.498c1.585-.233 2.708-1.626 2.708-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z"
        />
      </svg>
    ),
  },
  {
    route: "/alerts",
    icon: (
      <svg width="20" height="22" viewBox="0 0 20 22" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M9.83301 7.99987V11.7499M9.83301 1.71387C7.56875 3.8641 4.55327 5.04344 1.43101 4.99987C1.03374 6.21016 0.831878 7.47604 0.833013 8.74987C0.833013 14.3419 4.65701 19.0399 9.83301 20.3719C15.009 19.0399 18.833 14.3419 18.833 8.74987C18.833 7.43987 18.623 6.17987 18.235 4.99987H18.083C14.887 4.99987 11.983 3.75087 9.83301 1.71387ZM9.83301 14.7499H9.84101V14.7579H9.83301V14.7499Z"
          stroke="currentColor"
          strokeWidth="1.5"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    ),
  },
  {
    route: "/profile",
    icon: (
      <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M16.25 6C16.25 6.99456 15.8549 7.94839 15.1516 8.65165C14.4484 9.35491 13.4945 9.75 12.5 9.75C11.5054 9.75 10.5516 9.35491 9.84833 8.65165C9.14506 7.94839 8.74998 6.99456 8.74998 6C8.74998 5.00544 9.14506 4.05161 9.84833 3.34835C10.5516 2.64509 11.5054 2.25 12.5 2.25C13.4945 2.25 14.4484 2.64509 15.1516 3.34835C15.8549 4.05161 16.25 5.00544 16.25 6ZM5.00098 20.118C5.03311 18.1504 5.83731 16.2742 7.24015 14.894C8.64299 13.5139 10.5321 12.7405 12.5 12.7405C14.4679 12.7405 16.357 13.5139 17.7598 14.894C19.1626 16.2742 19.9668 18.1504 19.999 20.118C17.6464 21.1968 15.0881 21.7535 12.5 21.75C9.82398 21.75 7.28398 21.166 5.00098 20.118Z"
          stroke="currentColor"
          strokeWidth="1.5"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    ),
  },
];

export function Layout(props: PropsWithChildren<{ containerClassName?: string }>) {
  const { pathname } = useRouter();
  return (
    <React.Fragment>
      <header className="navbar bg-base-100">
        <div className="flex-1">
          <Link href="/" className="btn btn-ghost flex items-center justify-center normal-case">
            <svg width="16" height="14" viewBox="0 0 16 14" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path
                d="M12.4418 1.09063C10.8688 0.491616 9.20868 0.83241 8.00902 1.97083C7.42326 1.39997 6.66737 1.01527 5.84397 0.870304L5.84384 0.870282C4.95998 0.715249 4.0471 0.838162 3.24174 1.2212C2.43638 1.60425 1.78086 2.22737 1.37509 2.99874C0.555848 4.54493 0.613902 6.12292 1.53632 7.665L1.53629 7.66502L1.53806 7.66786C2.02782 8.45637 2.64675 9.16413 3.37094 9.76423C4.32351 10.5839 5.30343 11.3966 6.25255 12.1837C6.305 12.2272 6.35736 12.2706 6.40961 12.3139L6.4103 12.3145L7.07537 12.8611C7.07566 12.8614 7.07594 12.8616 7.07622 12.8618C7.33625 13.0797 7.66863 13.1991 8.01159 13.1997L8.01287 13.1997C8.34881 13.1982 8.6741 13.0805 8.92834 12.8664C8.92851 12.8662 8.92868 12.8661 8.92885 12.8659L9.5276 12.3675C9.52766 12.3674 9.52771 12.3674 9.52776 12.3673C10.6143 11.4666 11.7393 10.5303 12.83 9.59131C13.5214 9.00298 14.1039 8.30669 14.5528 7.53176C14.8886 6.95865 15.0985 6.32551 15.1692 5.67124L15.1758 5.6468L15.176 5.64685L15.1779 5.63785L15.1886 5.58943L15.1933 5.56817V5.54641V4.85065V4.81242V4.79389L15.1899 4.77568C15.1814 4.73038 15.1744 4.68699 15.167 4.64101C15.1632 4.61748 15.1592 4.59327 15.155 4.56777C15.129 4.38476 15.0936 4.20312 15.0486 4.02353L15.0487 4.02352L15.0476 4.01955C14.6596 2.5933 13.7802 1.60121 12.4419 1.09067L12.4418 1.09063ZM5.09808 2.09939H5.09863C5.27096 2.09938 5.44292 2.11418 5.61243 2.14359L5.61316 2.14372C6.29453 2.25933 6.87125 2.61065 7.3911 3.23989L7.3911 3.2399L7.39218 3.2412L7.45752 3.31893L7.45794 3.31943L7.85794 3.79219L8.01144 3.97361L8.16398 3.79138L8.59065 3.28166L8.5908 3.28179L8.59625 3.27466C8.61808 3.24607 8.63719 3.22324 8.65862 3.19764C8.66982 3.18427 8.68165 3.17014 8.69483 3.15403C9.53213 2.17167 10.7773 1.84605 11.9527 2.29399L11.953 2.29407C12.8881 2.6492 13.4751 3.313 13.7571 4.35327C13.7913 4.48914 13.8178 4.62664 13.8364 4.7652L13.8363 4.76521L13.8373 4.7709L13.8666 4.94978V5.42022C13.8587 5.45636 13.8528 5.49292 13.849 5.52972C13.7994 6.01122 13.6447 6.47787 13.3946 6.89962L13.3939 6.90079C13.0164 7.54725 12.5272 8.12864 11.9467 8.62029L11.9467 8.62029L11.9452 8.62158C10.996 9.44173 10.0181 10.259 9.06481 11.0556C8.93109 11.1673 8.79786 11.2787 8.66526 11.3896C8.66517 11.3897 8.66508 11.3897 8.66499 11.3898L8.06416 11.8889L8.06411 11.8888L8.05992 11.8925C8.04759 11.9034 8.02961 11.9105 8.00955 11.91L8.00473 12.1099L8.00954 11.91C7.9895 11.9095 7.97216 11.9016 7.96069 11.8904L7.95472 11.8846L7.94828 11.8793L7.28217 11.3318C7.28207 11.3317 7.28197 11.3317 7.28187 11.3316C6.28446 10.5058 5.2551 9.65307 4.25792 8.80057L4.25794 8.80054L4.25497 8.7981C3.63482 8.28824 3.10572 7.6859 2.68805 7.01476C2.33655 6.42625 2.15567 5.85672 2.13499 5.29565C2.1143 4.73455 2.25332 4.16923 2.56073 3.58835L2.56101 3.58781C2.79582 3.14084 3.15705 2.764 3.60525 2.50059C4.05351 2.23715 4.5705 2.09796 5.09808 2.09939Z"
                fill="currentColor"
                stroke="currentColor"
                strokeWidth="0.4"
              />
            </svg>
            HealthPace
          </Link>
        </div>
      </header>

      <main className={classNames("w-full h-full max-h-full p-2", props.containerClassName)}>
        {props.children}
        <div className="h-16" />
      </main>

      <nav className="btm-nav">
        {navigationElements.map((navEl) => (
          <Link
            className={classNames({
              active: pathname === "/" ? pathname === navEl.route : pathname.includes(navEl.route),
            })}
            key={navEl.route}
            href={navEl.route}
          >
            {navEl.icon}
          </Link>
        ))}
      </nav>
    </React.Fragment>
  );
}
